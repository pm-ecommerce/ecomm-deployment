version: "3.2"

services:
  mysql:
    image: mysql
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: test
      MYSQL_DATABASE: pm_db
    ports:
      - "3307:3306"
    networks:
      - ecommerce

  install:
    build:
      context: ./dockerfiles
      dockerfile: install
    container_name: install
    entrypoint: ./install.sh
    environment:
      MYSQL_HOST: mysql
      MYSQL_USERNAME: root
      MYSQL_PASSWORD: test
      MYSQL_DATABASE: pm_db
      ADMIN_NAME: Admin
      ADMIN_EMAIL: admin@pm-ecommerce.com
      ADMIN_PASSWORD: 6cvaR6YLUE1B3RCvjgh93Q==
    depends_on:
      - mysql
    networks:
      - ecommerce

  pm-ecomm-config:
    image: miuedu/ecomm-config
    container_name: pm-ecomm-config
    environment:
      SPRING_CLOUD_CONFIG_SERVER_GIT_USERNAME: {gitUserName}
      SPRING_CLOUD_CONFIG_SERVER_GIT_PASSWORD: {gitPassword}
    ports:
      - "9090:9090"
    networks:
      - ecommerce

  pm-ecomm-eureka:
    container_name: pm-ecomm-eureka
    build:
      context: ./dockerfiles
      dockerfile: eureka
    entrypoint: ./eureka.sh
    environment:
      SPRING_CLOUD_CONFIG_URI: http://pm-ecomm-config:9090
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://pm-ecomm-eureka:8761/eureka
    ports:
      - "8761:8761"
    networks:
      - ecommerce
    depends_on:
      - pm-ecomm-config

  pm-ecomm-gateway:
    container_name: pm-ecomm-gateway
    build:
      context: ./dockerfiles
      dockerfile: gateway
    entrypoint: ./gateway.sh
    environment:
      SPRING_CLOUD_CONFIG_URI: http://pm-ecomm-config:9090
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://pm-ecomm-eureka:8761/eureka
      SPRING_DATASOURCE_URL: jdbc:mysql://root:test@mysql:3306/pm_db
    ports:
      - "8080:8080"
    networks:
      - ecommerce
    depends_on:
      - mysql
      - pm-ecomm-config
      - pm-ecomm-eureka

  pm-ecomm-zookeeper:
    image: zookeeper
    container_name: pm-ecomm-zookeeper
    restart: always
    volumes:
      - type: bind
        source: ./config/zookeeper.properties
        target: /conf/zoo.cfg
    ports:
      - "2181:2181"
    networks:
      - ecommerce

  pm-ecomm-kafka:
    container_name: pm-ecomm-kafka
    image: wurstmeister/kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: pm-ecomm-zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: pm-ecomm-kafka
      KAFKA_CREATE_TOPICS: NotificationTopic:1:1
    ports:
      - "9092:9092"
    depends_on:
      - pm-ecomm-zookeeper
    networks:
      - ecommerce

  pm-ecomm-account:
    container_name: pm-ecomm-account
    build:
      context: ./dockerfiles
      dockerfile: account
    entrypoint: ./account.sh
    environment:
      SPRING_CLOUD_CONFIG_URI: http://pm-ecomm-config:9090
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://pm-ecomm-eureka:8761/eureka
      SPRING_DATASOURCE_URL: jdbc:mysql://root:test@mysql:3306/pm_db
    ports:
      - "8081:8081"
    depends_on:
      - mysql
      - pm-ecomm-config
      - pm-ecomm-eureka
      - pm-ecomm-kafka
    networks:
      - ecommerce

  pm-ecomm-product:
    container_name: pm-ecomm-product
    build:
      context: ./dockerfiles
      dockerfile: product
    entrypoint: ./product.sh
    environment:
      SPRING_CLOUD_CONFIG_URI: http://pm-ecomm-config:9090
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://pm-ecomm-eureka:8761/eureka
      SPRING_DATASOURCE_URL: jdbc:mysql://root:test@mysql:3306/pm_db
    ports:
      - "8082:8082"
    depends_on:
      - mysql
      - pm-ecomm-config
      - pm-ecomm-eureka
      - pm-ecomm-kafka
    networks:
      - ecommerce

  pm-ecomm-search:
    container_name: pm-ecomm-search
    build:
      context: ./dockerfiles
      dockerfile: search
    entrypoint: ./search.sh
    environment:
      SPRING_CLOUD_CONFIG_URI: http://pm-ecomm-config:9090
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://pm-ecomm-eureka:8761/eureka
      SPRING_DATASOURCE_URL: jdbc:mysql://root:test@mysql:3306/pm_db
    ports:
      - "8083:8083"
    depends_on:
      - mysql
      - pm-ecomm-config
      - pm-ecomm-eureka
    networks:
      - ecommerce

  pm-ecomm-shopping-cart:
    container_name: pm-ecomm-shopping-cart
    build:
      context: ./dockerfiles
      dockerfile: shopping-cart
    entrypoint: ./shopping-cart.sh
    environment:
      SPRING_CLOUD_CONFIG_URI: http://pm-ecomm-config:9090
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://pm-ecomm-eureka:8761/eureka
      SPRING_DATASOURCE_URL: jdbc:mysql://root:test@mysql:3306/pm_db
    ports:
      - "8084:8084"
    depends_on:
      - mysql
      - pm-ecomm-config
      - pm-ecomm-eureka
    networks:
      - ecommerce

  pm-ecomm-order:
    container_name: pm-ecomm-order
    build:
      context: ./dockerfiles
      dockerfile: order
    entrypoint: ./order.sh
    environment:
      SPRING_CLOUD_CONFIG_URI: http://pm-ecomm-config:9090
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://pm-ecomm-eureka:8761/eureka
      SPRING_DATASOURCE_URL: jdbc:mysql://root:test@mysql:3306/pm_db
    ports:
      - "8085:8085"
    depends_on:
      - mysql
      - pm-ecomm-config
      - pm-ecomm-eureka
      - pm-ecomm-kafka
    networks:
      - ecommerce

  pm-ecomm-report:
    container_name: pm-ecomm-report
    build:
      context: ./dockerfiles
      dockerfile: report
    entrypoint: ./report.sh
    environment:
      SPRING_CLOUD_CONFIG_URI: http://pm-ecomm-config:9090
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://pm-ecomm-eureka:8761/eureka
      SPRING_DATASOURCE_URL: jdbc:mysql://root:test@mysql:3306/pm_db
    ports:
      - "8086:8086"
    depends_on:
      - mysql
      - pm-ecomm-config
      - pm-ecomm-eureka
    networks:
      - ecommerce

  pm-ecomm-email-sender:
    container_name: pm-ecomm-email-sender
    build:
      context: ./dockerfiles
      dockerfile: email-sender
    entrypoint: ./email-sender.sh
    environment:
      SPRING_CLOUD_CONFIG_URI: http://pm-ecomm-config:9090
      SPRING_DATASOURCE_URL: jdbc:mysql://root:test@mysql:3306/pm_db
    ports:
      - "8087:8087"
    depends_on:
      - mysql
      - pm-ecomm-config
      - pm-ecomm-kafka
    networks:
      - ecommerce

  pm-ecomm-admin:
    container_name: pm-ecomm-admin
    image: miuedu/ecomm-admin
    ports:
      - "4200:80"
    networks:
      - ecommerce

  pm-ecomm-ui:
    container_name: pm-ecomm-ui
    image: miuedu/ecomm-ui
    ports:
      - "3000:80"
    networks:
      - ecommerce

  pm-ecomm-vendor:
    container_name: pm-ecomm-vendor
    image: miuedu/ecomm-vendor
    ports:
      - "4201:80"
    networks:
      - ecommerce

networks:
  ecommerce:
    driver: bridge
